name: build

on:
  push:
    branches-ignore:
      - 'wip-*'
    paths-ignore:
      - 'README.md'

  pull_request:
    branches:
      - 'master'

jobs:
  simple_build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2-beta
      with:
        fetch-depth: 5

    - uses: actions/cache@v1
      name: Setup conan cache
      id: conan-cache
      with:
        path: ~/.conan
        key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.txt') }}
        restore-keys: |
          ${{ runner.os }}-conan-

    - uses: actions/cache@v1
      name: Setup pip cache
      id: pip-cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        version: 3.8
        architecture: x64

    - name: Install pip
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      if: steps.pip-cache.outputs.cache-hit != 'true'
      run: pip install -r requirements.txt

    - name: Setup Prerequisites
      run: |
        sudo apt-get update --quiet --yes 1>/dev/null
        sudo apt-get install --no-install-recommends --quiet --yes \
            lcov          \
            libyaml-cpp-dev

    - name: Configure
      run: |
        cmake                         \
            -S .                      \
            -Bbuild                   \
            -DCMAKE_BUILD_TYPE=Debug  \
            -DZEPHIR_BUILD_TESTING=ON \
            -DENABLE_ALL_WARNINGS=ON  \
            -DCODE_COVERAGE=ON
        echo ::set-env name=ZEPHIR_TESTS_ROOT::${GITHUB_WORKSPACE}/tests

    - name: Build
      run: cmake --build build -j "$(getconf _NPROCESSORS_ONLN)"

    - name: Run Tests
      run: cmake --build build --target check

    - name: Generate code coverage report
      run: cmake --build build --target ccov-all-capture

    - name: Upload code coverage report
      uses: codecov/codecov-action@v1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./build/ccov/all-merged.info
        yml: ./.codecov.yml
